[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "SunghyeData.github.io",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Homework.html",
    "href": "Homework.html",
    "title": "SunghyeData.github.io",
    "section": "",
    "text": "data(anscombe) # Load Anscombe’s data View(anscombe) # View the data summary(anscombe)\n\n\n\n\nplot(anscombe$x1,anscombe$y1) \n\n\n\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500"
  },
  {
    "objectID": "Homework.html#anscombe-1973-quartlet",
    "href": "Homework.html#anscombe-1973-quartlet",
    "title": "SunghyeData.github.io",
    "section": "",
    "text": "data(anscombe) # Load Anscombe’s data View(anscombe) # View the data summary(anscombe)"
  },
  {
    "objectID": "Homework.html#simple-version",
    "href": "Homework.html#simple-version",
    "title": "SunghyeData.github.io",
    "section": "",
    "text": "plot(anscombe$x1,anscombe$y1) \n\n\n\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500"
  },
  {
    "objectID": "Homework.html#fancy-version-per-help-file",
    "href": "Homework.html#fancy-version-per-help-file",
    "title": "SunghyeData.github.io",
    "section": "Fancy version (per help file)",
    "text": "Fancy version (per help file)\n\nff &lt;- y ~ x \nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SunghyeData.github.io",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Homework.html#generative-art",
    "href": "Homework.html#generative-art",
    "title": "SunghyeData.github.io",
    "section": "2. Generative Art",
    "text": "2. Generative Art\n\nGyre 35700 by Mark Stock\nThis work visually and beautifully expresses natural patterns by simulating currents and eddies in the ocean with “computer code.” The movement in the ocean is still being studied to see how it affects global climate change, and this research can be used to help understand visually.\n\nMiniCityArt by Mark Stock\nThis is an artistically created scale model of a city using “3D printing” technology. These technologies can be used in fields such as architecture and urban construction to help understand."
  },
  {
    "objectID": "Homework.html#write-a-critique-on-a-chart-in-published-work",
    "href": "Homework.html#write-a-critique-on-a-chart-in-published-work",
    "title": "SunghyeData.github.io",
    "section": "4. Write a critique on a chart in published work",
    "text": "4. Write a critique on a chart in published work\nAccording to Nathan Yau, axes in a chart can significantly influence the interpretation of data, potentially distorting the intended message. For example, if the Y-axis range is artificially scaled down, variability in the data can be overemphasized, while if it is artificially scaled up, small differences can easily be overlooked. \nAverage Number of Actual Weekly Hours of Work in Main Job. Full-time employees. 2013\n\nThis bar chart was created by the German economic development agency GTAI. As we can see from this chart, German workers seem to work more hours than workers in other EU countries. The fact that Germany’s working hours are visually prominent compared to other countries in this chart seems to be intentional. The problem is that the starting point is 36, not 0. This chart should have been drawn with 0 included. \nThe graph below, redrawn with 0 included, shows that the differences in working hours between European countries are not that significant, even when visually observed.\nAverage Number of Actual Weekly Hours of Work in Main Job. Full-time employees. 2013"
  },
  {
    "objectID": "Homework.html#fall",
    "href": "Homework.html#fall",
    "title": "SunghyeData.github.io",
    "section": "3. Fall",
    "text": "3. Fall"
  },
  {
    "objectID": "Homework.html#data-visualization",
    "href": "Homework.html#data-visualization",
    "title": "SunghyeData.github.io",
    "section": "Data Visualization",
    "text": "Data Visualization"
  },
  {
    "objectID": "Homework.html#objective-create-graphics-with-r",
    "href": "Homework.html#objective-create-graphics-with-r",
    "title": "SunghyeData.github.io",
    "section": "Objective: Create graphics with R",
    "text": "Objective: Create graphics with R"
  },
  {
    "objectID": "Homework.html#title-fall-color",
    "href": "Homework.html#title-fall-color",
    "title": "SunghyeData.github.io",
    "section": "Title: Fall color",
    "text": "Title: Fall color"
  },
  {
    "objectID": "Homework.html#paul-murrells-r-examples",
    "href": "Homework.html#paul-murrells-r-examples",
    "title": "SunghyeData.github.io",
    "section": "Paul Murrell’s R examples",
    "text": "Paul Murrell’s R examples\n\n1. Basic Plot\n\nplot(pressure, pch=16)  # Can you change pch?\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n\nThis line creates a basic scatter plot with pressure on the y-axis and temperature on the x-axis. The argument pch=16 specifies the shape of the points (solid circles). Also, this command adds text to the plot. The text appears at the specified coordinates (x=150, y=600), showing “Pressure (mm Hg) versus Temperature (Celsius)” at the top of the plot.\n\npar(mfrow=c(3, 2))\n\n\n\n2. Scatterplot\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=2) # Try different cex value?  \npoints(x, y2, pch=21, bg=\"white\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for?\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\nThe lines() function adds a line connecting the points defined by the x and y1 coordinates. Then, points() adds larger points (since cex=2) on the same line, using solid circles (pch=16). Also, these commands customize the axes and labels. The axis() function adds ticks and numbers to the x and y axes, box() draws a box around the plot, and mtext() adds text labels to the plot’s margins (axis titles).\n\n\n3. Histogram\n\nY &lt;- rnorm(50)\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA  \nx &lt;- seq(-3.5, 3.5, .1)\ndn &lt;- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1)) \n\nThe hist() function generates a histogram of the data in Y, showing the distribution of values. The lines() function overlays a normal distribution curve on top of the histogram, allowing comparison between the sample data and a normal distribution.\n\n\n4. Barplot\n\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts &lt;- barplot(VADeaths, col=gray(0.1 + seq(1, 9, 2)/11), names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)), at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2, VADeaths, col=rep(c(\"white\", \"black\"), times=3:2), cex=0.8)\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\nThis creates a barplot using the VADeaths dataset. The text() function adds the corresponding numerical values on top of each bar, providing a clear display of the exact data values.\n\n\n5. Boxplot\n\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth, boxwex = 0.25, at = 1:3 - 0.2, subset= supp == \"VC\", col=\"white\", xlab=\"\", ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE, boxwex = 0.25, at = 1:3 + 0.2, subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), fill = c(\"white\", \"gray\"), bty=\"n\")\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\nA boxplot is created comparing two groups (Ascorbic acid and Orange juice). The legend() function adds a legend to the plot, helping viewers understand which group corresponds to which box in the plot.\n\n\n6. Persp\n\nx &lt;- seq(-10, 10, length=30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2 + y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta=30, phi=30, expand=0.5)\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\nThe persp() function generates a 3D perspective plot based on the given x, y, and z values. The 3D plot displays the relationship between these variables as a smooth surface.\n\n\n7. Piechart\n\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\", \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col=gray(seq(0.3, 1.0, length=6)))\n\n\n\n\nThis creates a pie chart where each slice represents a portion of pie.sales. Each slice is labeled with the corresponding category name (e.g., “Blueberry”, “Cherry”), and shaded in different gray levels."
  },
  {
    "objectID": "Homework.html#big-data-analysis-pitfall",
    "href": "Homework.html#big-data-analysis-pitfall",
    "title": "SunghyeData.github.io",
    "section": "Big Data Analysis Pitfall",
    "text": "Big Data Analysis Pitfall\nFirst, it is to find false correlations. When the data is large, correlations due to chance can appear as if they are significant, but these correlations may not actually be causal. For example, if “as ice cream sales increase, the number of drowning deaths also increases,” these two are just coincidental relationships that occur because they both increase together as the weather gets warmer. To avoid this, correlation analysis based on theoretical background or domain knowledge is necessary. Second, data bias. When collecting data during big data analysis, if biased data is collected, the analysis results may also be biased."
  },
  {
    "objectID": "Homework.html#overfitting-and-overparameterization",
    "href": "Homework.html#overfitting-and-overparameterization",
    "title": "SunghyeData.github.io",
    "section": "Overfitting and Overparameterization",
    "text": "Overfitting and Overparameterization\nOverfitting occurs when the machine learning model gives accurate predictions for training data but not for new data. When data scientists use machine learning models for making predictions, they first train the model on a known data set. Then, based on this information, the model tries to predict outcomes for new data sets. An overfit model can give inaccurate predictions and cannot perform well for all types of new data. On the other hand, overparameterization is a phenomenon in which a model becomes complex because it contains too many parameters. A large number of parameters may reduce the explanatory power of the model, which may hinder the generalization ability of the model. To solve this problem, appropriate model simplification or regularization techniques can be used."
  },
  {
    "objectID": "Homework.html#charts-using-r-graphics",
    "href": "Homework.html#charts-using-r-graphics",
    "title": "SunghyeData.github.io",
    "section": "1. Charts using R Graphics",
    "text": "1. Charts using R Graphics\n\na. Histogram\n\nhist(airquality$Ozone, \n     main = \"Histogram of Ozone Levels\", \n     xlab = \"Ozone (ppb)\", \n     col = \"blue\", \n     border = \"black\", \n     breaks = 20)\n\n\n\n\n\n\nb. Barchart\n\nbarplot(table(airquality$Ozone), \n        main = \"Vertical Bar Chart of Ozone Levels\", \n        xlab = \"Ozone Levels\", \n        ylab = \"Frequency\", \n        col = \"yellow\")\n\n\n\n\n\nbarplot(table(airquality$Ozone), \n        horiz = TRUE, \n        main = \"Horizontal Bar Chart of Ozone Levels\", \n        xlab = \"Frequency\", \n        ylab = \"Ozone Levels\", \n        col = \"lightyellow\")\n\n\n\n\n\n\nc. Piechart\n\npie(table(airquality$Month), \n    main = \"Pie Chart of Measurements by Month\", \n    col = rainbow(5))\n\n\n\n\n\n\nd. Boxplot\n\nboxplot(airquality$Temp, \n        main = \"Boxplot of Temperature\", \n        ylab = \"Temperature (Fahrenheit)\", \n        col = \"yellow\")\n\n\n\n\n\n\ne. Scatterplot\n\nplot(airquality$Ozone, airquality$Wind, \n     main = \"Scatterplot of Ozone vs Wind\", \n     xlab = \"Ozone (ppb)\", \n     ylab = \"Wind (mph)\", \n     pch = 19, \n     col = \"darkblue\")"
  },
  {
    "objectID": "Homework.html#charts-using-ggplot2",
    "href": "Homework.html#charts-using-ggplot2",
    "title": "SunghyeData.github.io",
    "section": "2. Charts using ggplot2",
    "text": "2. Charts using ggplot2\n\nlibrary(ggplot2)\n\n\na. Histogram\n\nggplot(airquality, aes(x = Ozone)) + \n  geom_histogram(binwidth = 10, fill = \"skyblue\", color = \"black\") + \n  ggtitle(\"Histogram of Ozone Levels\") + \n  xlab(\"Ozone (ppb)\") + \n  theme_minimal()\n\nWarning: Removed 37 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\nb. Barchart\n\nggplot(airquality, aes(x = factor(Ozone))) + \n  geom_bar(fill = \"lightgreen\") + \n  ggtitle(\"Vertical Bar Chart of Ozone Levels\") + \n  xlab(\"Ozone Levels\") + \n  ylab(\"Frequency\") + \n  theme_minimal()\n\n\n\n\n\nggplot(airquality, aes(x = factor(Ozone))) + \n  geom_bar(fill = \"orange\") + \n  coord_flip() + \n  ggtitle(\"Horizontal Bar Chart of Ozone Levels\") + \n  xlab(\"Frequency\") + \n  ylab(\"Ozone Levels\") + \n  theme_minimal()\n\n\n\n\n\n\nc. Piechart\n\nggplot(airquality, aes(x = \"\", fill = factor(Month))) + \n  geom_bar(width = 1) + \n  coord_polar(\"y\") + \n  ggtitle(\"Pie Chart of Measurements by Month\") + \n  theme_minimal() + \n  scale_fill_brewer(palette = \"Pastel1\")\n\n\n\n\n\n\nd. Boxplot\n\nggplot(airquality, aes(y = Temp)) + \n  geom_boxplot(fill = \"lightyellow\") + \n  ggtitle(\"Boxplot of Temperature\") + \n  ylab(\"Temperature (Fahrenheit)\") + \n  theme_minimal()\n\n\n\n\n\n\ne. Scatterplot\n\nggplot(airquality, aes(x = Ozone, y = Wind)) + \n  geom_point(color = \"blue\") + \n  ggtitle(\"Scatterplot of Ozone vs Wind\") + \n  xlab(\"Ozone (ppb)\") + \n  ylab(\"Wind (mph)\") + \n  theme_minimal()\n\nWarning: Removed 37 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "Homework.html#export-the-charts-using-different-formats",
    "href": "Homework.html#export-the-charts-using-different-formats",
    "title": "SunghyeData.github.io",
    "section": "3. Export the charts using different formats",
    "text": "3. Export the charts using different formats\n\na. .pdf\n\npdf(\"histogram_ozone.pdf\")\nhist(airquality$Ozone, main=\"Histogram of Ozone Levels\")\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nb. .jpg\n\njpeg(\"scatterplot_ozone_wind.jpg\")\nplot(airquality$Ozone, airquality$Wind, main=\"Scatterplot of Ozone vs Wind\")\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nc. .svg\n\nsvg(\"boxplot_temperature.svg\")\nboxplot(airquality$Temp, main=\"Boxplot of Temperature\")\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nd. .tiff\n\ntiff(\"barchart_ozone.tiff\")\nbarplot(table(airquality$Ozone), main=\"Vertical Bar Chart of Ozone Levels\")\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\ne. .bmg\n\nbmp(\"piechart_month.bmp\")\npie(table(airquality$Month), main=\"Pie Chart of Measurements by Month\")\ndev.off()\n\nquartz_off_screen \n                2"
  },
  {
    "objectID": "Homework.html#quarto",
    "href": "Homework.html#quarto",
    "title": "SunghyeData.github.io",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Homework.html#running-code",
    "href": "Homework.html#running-code",
    "title": "SunghyeData.github.io",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n{r}\n1 + 1\n\nYou can add options to executable code like this\n{r}\n#| echo: false\n2 * 2\n\nThe echo: false option disables the printing of code (only output is displayed)."
  }
]